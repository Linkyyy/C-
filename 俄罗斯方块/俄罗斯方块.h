#pragma once
#define High 26
#define Wide 15

//生成区方块坐标记录数组,第一个[]表示7种基本方块,第二个[]表示4个坐标,第三个[0]表示X坐标[1]表示Y坐标
int InitP[7][4][2]=
{ { { 2,6 },{ 2,7 },{ 3,6 },{ 3,7 } },//第0种基本方块
{ { 1,7 },{ 2,7 },{ 2,6 },{ 3,6 } },//第1种基本方块
{ { 1,6 },{ 2,6 },{ 2,7 },{ 3,7 } },//第2种基本方块
{ { 2,6 },{ 3,6 },{ 3,7 },{ 3,8 } },//第3种基本方块
{ { 2,8 },{ 3,8 },{ 3,7 },{ 3,6 } },//第4种基本方块
{ { 3,5 },{ 3,8 },{ 3,7 },{ 3,6 } },//第5种基本方块
{ { 2,7 },{ 3,6 },{ 3,7 },{ 3,8 } } };//第6种基本方块

//记录坐标偏移量的数组
int ChangeP[7][4][4][2]=
{ { { { 0,0 },{ 0,0 },{ 0,0 },{ 0,0 } },{ { 0,0 },{ 0,0 },{ 0,0 },{ 0,0 } },{ { 0,0 },{ 0,0 },{ 0,0 },{ 0,0 } },{ { 0,0 },{ 0,0 },{ 0,0 },{ 0,0 } } },
{ { { 2,1 },{ 1,0 },{ 0,1 },{ -1,0 } },{ { -2,-1 },{ -1,0 },{ 0,-1 },{ 1,0 } },{ { 2,1 },{ 1,0 },{ 0,1 },{ -1,0 } },{ { -2,-1 },{ -1,0 },{ 0,-1 },{ 1,0 } } },
{ { { 1,2 },{ 0,1 },{ 1,0 },{ 0,-1 } },{ { -1,-2 },{ 0,-1 },{ -1,0 },{ 0,1 } },{ { 1,2 },{ 0,1 },{ 1,0 },{ 0,-1 } },{ { -1,-2 },{ 0,-1 },{ -1,0 },{ 0,1 } } },
{ { { -1,2 },{ -2,1 },{ -1,0 },{ 0,-1 } },{ { 2,0 },{ 1,1 },{ 0,0 },{ -1,-1 } },{ { 0,-1 },{ 1,0 },{ 0,1 },{ -1,2 } },{ { -1,-1 },{ 0,-2 },{ 1,-1 },{ 2,0 } } },
{ { { 1,0 },{ 0,-1 },{ -1,0 },{ -2,1 } },{ { 0,-2 },{ -1,-1 },{ 0,0 },{ 1,1 } },{ { -2,1 },{ -1,2 },{ 0,1 },{ 1,0 } },{ { 1,1 },{ 2,0 },{ 1,-1 },{ 0,-2 } } },
{ { { -3,2 },{ -2,-1 },{ -1,0 },{ 0,1 } },{ { 3,-2 },{ 2,1 },{ 1,0 },{ 0,-1 } },{ { -3,2 },{ -2,-1 },{ -1,0 },{ 0,1 } },{ { 3,-2 },{ 2,1 },{ 1,0 },{ 0,-1 } } },
{ { { 0,1 },{ -2,1 },{ -1,0 },{ 0,-1 } },{ { 1,-1 },{ 1,1 },{ 0,0 },{ -1,-1 } },{ { -1,0 },{ 1,0 },{ 0,1 },{ -1,2 } },{ { 0,0 },{ 0,-2 },{ 1,-1 },{ 2,0 } } } };

int map[High][Wide] =
{
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,4 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,4 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,4 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,4 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,4 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,4 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,4 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,4 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,4 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,4 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,4 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,4 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,4 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,4 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,4 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,4 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,4 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,4 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,4 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,4 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,4 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,4 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,4 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,4 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,4 },
	{3,3,3,3,3,3,3,3,3,3,3,3,3,3,4},
};
int Picture;
int Shape;
int Score = 0;
int Graph[4][2];
char key;
int Speed=400;
int MaxScore=0;

void End();
void Init();
void ShowUI();
void Playgame();
void Move(char key);
void Down();
void Change();
int IsbottomTop();
void New();
void Clear();
void ShowScore();